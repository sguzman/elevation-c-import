Compiling elevation
===================

This chapter describe how to build elevation from the source code. You can
skip this part when you got a binary distribution.

Dependencies
------------

In order to build elevation, you need

* a C compiler (tested with gcc (Debian 4.3.5-4))
* CMake 2.6
* libxml2 + development files
* an implementation of getopt (contained in the mingw-gcc, should be present on
  any UNIX-like system)

Build
-----

The build of elevation is straight-forward:

.. code-block:: sh

  tar xzf lev2.tar.gz
  mkdir build_lev2
  # make an out-of-source build directory
  cd build_lev2
  # create makefiles
  cmake ../lev2
  # Build the software
  make
  # Test if it works
  ./elevtest
  ./elevation --help
  

Build for Windows
-----------------

General
+++++++

You need 

* `libxml2`_ and its dependency libraries (currently these are libiconv and
  zlib)
* cmake 2.6
* mingw

.. _libxml2: ftp://ftp.zlatkovic.com/libxml/

To configure configure the build system a
``-DLIBXML2DIR=»Path to the folder«``-Parameter is appended to the cmake call::

 > cmake -DLIBXML2DIR=c:/stuff/libxml2 ../elevation

Cross-compile
+++++++++++++

There is a cross-compile script suitable for debian based systems. You need the
unpacked win32 dependency libraries unpacked in a folder. Then you configure
the build system with the ``crosscompile`` script::

  $ ./crosscompile ../libxml-win32 ../build-elevation

Documentation
-------------

The documentation is placed in the doc/ sub folder. To create the html files,
you need `Sphinx <http://sphinx.pocoo.org/>`_. The html files are created by
running ``make html`` in the doc/ sub folder.
